/* Ћабораторна€ работа 7.
ƒинамическое выделение пам€ти
дл€ использовани€ свободной пам€ти ќ— (heap - "куча")
объ€вл€ютс€ динамические переменные по синтаксису
указатель_тип им€_переменной = new тип;
или
тип * им€_переменной = new тип;
работа с динамической пам€тью происходит через указатели
ѕреимущества
1) доступно гораздо больше пам€ти, нежели в стеке
2) размеры массиво
ќсобенность:
ћожно очищать
„тобы очистить пам€ть delete название_указател€
¬ динамической пам€ти могут выдел€тьс€ только одномерные массивы
тип * им€_указател€ = new тип [длина];
удал€ютс€ одномерные массивы с помощью записи
delete[] им€_указател€
ƒл€ выделени€ двумерного массива сначала создаЄтс€ одномерный массив
содержащий указатели на другие массивы (строки)
int ** dynamic2Darray = new int[l1]
затем выдел€етс€ блок пам€ти под каждую строку и указатель на неЄ
возвращаетс€ в созданный массив указателей
for (int i = 0; i < l1; i++){
dynamic2darray[i] = new int[l2];
	for (int j = 0; j < l2; j++){
	dynamic2Darray[i][j] = j;
	}}
„тобы удалить двумерный массив
for(int i = 0; i < l1; i++){
	delete[] dynemic2Darray[i];
	}
delete[] dynamic2Darray;*/
#include <iostream>
int * pt_int = new int;
int main()
{

}